name: release

on:
  workflow_dispatch:
    inputs:
      semver:
        description: "The semver to use"
        required: true
        default: "patch"
      tag:
        description: "The npm tag"
        required: false
        default: "latest"
  pull_request:
    types: [closed]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Get secrets
        id: getsecrets
        shell: bash
        run: |
          echo '${{ toJson(secrets) }}' > secrets.json
          echo ::set-output name=tokens::$(cat secrets.json)
      - name: Test
        run: |
          NPM_TOKEN=$(echo '${{ steps.getsecrets.outputs.tokens }}' | jq -R '. | fromjson | to_entries[] | select((.key | startswith("NPM_TOKEN_")) and (.value | startswith("${{github.actor}}"))) | .value | split(":")[1]')
          OPTIC_TOKEN=$(echo '${{ steps.getsecrets.outputs.tokens }}' | jq -R '. | fromjson | to_entries[] | select((.key | startswith("OPTIC_TOKEN_")) and (.value | startswith("${{github.actor}}"))) | .value | split(":")[1]')
          echo $NPM_TOKEN
          echo $OPTIC_TOKEN
          echo USER_NPM_TOKEN=$(echo $NPM_TOKEN) >> $GITHUB_ENV
          echo USER_OPTIC_TOKEN=$(echo $OPTIC_TOKEN) >> $GITHUB_ENV
          # echo "::add-mask::${{ env.NPM_TOKEN }}"
          # echo "::add-mask::${{ env.OPTIC_TOKEN }}"
      - uses: sameer-coder/optic-release-automation-action@multiple-tokens # you can use a tag instead of main
        with:
          user-npm-token: $USER_NPM_TOKEN
          user-optic-token: $USER_OPTIC_TOKEN
          github-token: ${{secrets.github_token}}
          npm-token: ${{secrets.NPM_TOKEN}}
          optic-token: ${{secrets.OPTIC_TOKEN}}
          semver: ${{ github.event.inputs.semver }}
          npm-tag: ${{ github.event.inputs.tag }}
          optic-url: http://0278-1-186-117-193.ngrok.io/api/generate/
          api-url: https://optic-release-automation-ocrlhra4va-ue.a.run.app/
